digraph G {
	graph [compound=true, rankdir=LR, ranksep="1.0"];
	node [label="\N"];

	subgraph clusterproxy {
		label=Proxy;
		UI;
		Proxy;
	}

	subgraph clustertour {
		label="Tour-service";
		// events
		// commands
		CreateTour [label="CreateTour\ncommand-handler", shape=box];
		CreateCyclist [label="CreateCyclist\ncommand-handler", shape=box];
		CreateEtappe [label="CreateEtappe\ncommand-handler", shape=box];
		// queries
		GetTour [label="GetTour\nquery-handler"];
		// store
		TourStore [shape=box, style=filled];
	}

	subgraph clustergambler {
		label="Gambler-service";
		// events
		GamblerTourCreatedEventhandler [label="TourCreated\nevent-handler",shape=diamond];
		GamblerCyclistCreatedEventhandler [label="CyclistCreated\nevent-handler",shape=diamond];
		// commands
		CreateGambler [label="CreateGambler\ncommand-handler", shape=box];
		CreateGamblerTeam [label="CreateGamblerTeam\ncommand-handler", shape=box];
		// queries
		GetGambler [label="GetGambler-query-handler"];
		SearchGambler [label="SearchGambler-query-handler"];
		// store
		GamblerStore [shape=box, style=filled];
	}

	subgraph clusterresults {
		label="Results-service";
		// events
		ResultsTourCreatedEventhandler [label="TourCreated\nevent-handler",shape=diamond];
		ResultsCyclistCreatedEventhandler [label="CyclistCreated\nevent-handler",shape=diamond];
		ResultsEtappeCreatedEventhandler [label="EtappeCreated\nevent-handler",shape=diamond];
		ResultsGamblerCreatedEventhandler [label="GamblerCreated\nevent-handler",shape=diamond];
		ResultsGamblerTeamCreatedEventhandler [label="GamblerTeamCreated\nevent-handler",shape=diamond];
		// commands
		CreateDayResults [label="CreateDayResults\ncommand-handler", shape=box];
		// queries
		GetResults [label="GetResults\nquery-handler"];
		// store
		ResultsStore [shape=box, style=filled];
	}

	subgraph clustercollector {
		label="Collector-service";
		// events
		CollectorTourCreatedEventhandler [label="TourCreated\nevent-handler",shape=diamond];
		CollectorCyclistCreatedEventhandler [label="CyclistCreated\nevent-handler",shape=diamond];
		CollectorEtappeCreatedEventhandler [label="EtappeCreated\nevent-handler",shape=diamond];
		CollectorGamblerCreatedEventhandler [label="GamblerCreated\nevent-handler",shape=diamond];
		CollectorGamblerTeamCreatedEventhandler [label="GamblerTeamCreated\nevent-handler",shape=diamond];
		CollectorDayResultsCreatedEventhandler  [label="DayResultsCreated\nevent-handler",shape=diamond];
		// store
		CollectorStore [shape=box, style=filled];
		// queries
		SearchEvents [label="SearchEvents\nquery-handler"];
	}

	subgraph clusternotifier {
		label="Notifier-service";
		// events
		NotifierGamblerCreatedEventhandler [label="GamblerCreated\nevent-handler",shape=diamond];
		NotifierDayResultsCreatedEventhandler  [label="DayResultsCreated\nevent-handler",shape=diamond];
		// store
		NotifierStore [shape=box, style=filled];
	}

	BrowserApp -> UI [label="html/css/javascript/HTTP",arrowhead="crow"];
	BrowserApp -> Proxy [label="json/HTTP",arrowhead="crow"];
	
	Proxy -> CreateTour [label="json/HTTP",arrowhead=crow, lhead=clustertour];
	Proxy -> CreateGambler [label="json/HTTP",arrowhead=crow, lhead=clustergambler];
	Proxy -> CreateDayResults [label="json/HTTP",arrowhead=crow, lhead=clusterresults];
	Proxy -> SearchEvents [label="json/HTTP",arrowhead=crow, lhead=clusterresults];

	// events initialted from tour-service
	CreateTour -> GamblerTourCreatedEventhandler [label="TourCreated-event", style=dashed];
	CreateTour -> GamblerTourCreatedEventhandler [label="TourCreated-event", style=dashed];
	CreateTour -> ResultsTourCreatedEventhandler [label="TourCreated-event", style=dashed];
	CreateTour -> CollectorTourCreatedEventhandler [label="TourCreated-event", style=dashed];

	CreateCyclist -> GamblerCyclistCreatedEventhandler [label="CyclistCreated-event", style=dashed];
	CreateCyclist -> ResultsCyclistCreatedEventhandler [label="CyclistCreated-event", style=dashed];
	CreateCyclist -> CollectorCyclistCreatedEventhandler [label="CyclistCreated-event", style=dashed];
	
	CreateEtappe -> ResultsEtappeCreatedEventhandler [label="EtappeCreated-event", style=dashed];
	CreateEtappe -> CollectorEtappeCreatedEventhandler [label="EtappeCreated-event", style=dashed];

	// events initiated from gambler service
	CreateGambler -> ResultsGamblerCreatedEventhandler [label="GamblerCreated-event", style=dashed];
	CreateGambler -> CollectorGamblerCreatedEventhandler [label="GamblerCreated-event", style=dashed];
	CreateGambler -> NotifierGamblerCreatedEventhandler [label="GamblerCreated-event", style=dashed];

	CreateGamblerTeam -> ResultsGamblerTeamCreatedEventhandler [label="GamblerTeamCreated-event", style=dashed];
	CreateGamblerTeam -> CollectorGamblerTeamCreatedEventhandler [label="GamblerTeamCreated-event", style=dashed];

	CreateDayResults -> CollectorDayResultsCreatedEventhandler [label="DayResultsCreated-event", style=dashed];
	CreateDayResults -> NotifierDayResultsCreatedEventhandler [label="DayResultsCreated-event", style=dashed];


}
